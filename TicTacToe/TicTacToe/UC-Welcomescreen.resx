<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5gcGAhIaHZCMNAAABChJREFU
        WEe9l1uIlVUUx1dZ2WVKSC177E2dIPFBgpDwQShICKqHSlQ0zDG1y4sImYLa5CUIeojUKHLqJbpIUFaC
        EAgx2UN0zudlRiVMtMBLYyrjhd3vv/aa8cy5cPR47A9/9t7rtvde397r+z5rBWmvPZDK9noq7CNnyV6T
        LNQ3Fky4GJ6FJ+F3QfUl6wqz9iP12Xh2/SG8zI5XMh4dKkuH7Xbkq1xXti1pv40LVesgpQ8R7C12tR3+
        Ai8wPsbkT4ZJDdDNchvZZp/tEaMzTJojJRuF0yZ4Gcd+2m0+Ltlz6Te7K8waAtsOt80xtkUMZWaDYodZ
        Y4TjOYLMxeGmELcMxSDePHgerg9xfUTa9YznhqhtIBPziX0JTg5RLTDqxqCvHTuvhmeisIPEXxeiWqD8
        GvbEsO1gAZ9qjhjWAuUeuDGG1w0m7IRPxTCfL25HDEfC77muDyc4RC0h/W73E+Nh7xf2HtzhCsACXoCD
        desEChWZY1dz1aqhQuRt2W5jwou0fxPnPvrL6JfcCNDvQHacdmuIMhB2IdTpb1hkqsGhuhn7GemATcN3
        gBs00+XqF3YEfkH/CXjaHQL4qFipLryUBUpZYf/CN1zQBNhPxHkd/MNZskdpP4GHoXbYz2Lm0D8D34Qp
        7bO7w92BTGX7jLKk3StNJyprezXQ3ZMO2hhlyAOW7UvfvbIglu1e4ii1G2l30z5Dq6z+AxO2kyKUw98d
        hZ1C/rJWs4XB96Griwi6QueDVjtbgWw67VZ4SIsn2NPILkLd9SV+78v2LUxDj6cSyH/E9oO8gLL9EHIH
        igXI+nB8LMavMvbDRKt3g57hAHwfTpFcwO5zxsrQWh/ru6Gw2WmP3ekGFcBm59ACltI5OXSSBWSPeyDt
        qGTL45zodE8Z1lWUVPrTPK3Zbjc+s0JVF+mI3YHPaWwXXzmEHJjQE93fiH/Cn6Deih/DXfQ3pV12C309
        b70hl9Mv4F/sdmq4NwW+q+GAak8WFLbIJ6q4hsjehp8h11U6QV/fA0djce/CQWTf0D5Lim8Nt6ZQdvDR
        I1wYogwEOlDDhQjDSUxw1m/AfnsQ3a9Qj2W6P1tOvjteA/DJhaiwzSG6ApVHFNrl8yGSw8/IFng/f3YN
        H7hWQKzZxBhkA2NDNBIoR7yMdAtweiSG1w1i62XUG8NaYPB/vI6/imEtUOoDsl9FJERtg1fMXKS8RtQF
        Bp0Y6LNpXojaBh7nix67qizXAKMN8DyLmd+OTPjO8+SK2R3ixoh7vt5Xm1PWQ/sOrT4mOsKsIWTjttmn
        Bx6CitWtxYRZc+A0Ga7FUT8mvfRVeI6rkIRJDbzIqCpm2173Lduapmm/GnidyMVKVWzViHdHrhEqryrb
        mxve83aACbqgPmBOwR1B9SVbFGY3Fux0ApO9AvPvef6omRDqa4DZf6YedToRd+CtAAAAAElFTkSuQmCC
</value>
  </data>
</root>